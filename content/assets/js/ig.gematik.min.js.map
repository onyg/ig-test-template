{"version":3,"file":"ig.gematik.min.js","mappings":"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","sources":["webpack://FHIRIGDOC/webpack/universalModuleDefinition","webpack://FHIRIGDOC/./src/fhir.js","webpack://FHIRIGDOC/./src/utils.js","webpack://FHIRIGDOC/./src/main.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"FHIRIGDOC\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FHIRIGDOC\"] = factory();\n\telse\n\t\troot[\"FHIRIGDOC\"] = factory();\n})(self, () => {\nreturn ","\nfunction parseFhirCapabilityStatement(data, resourceType) {\n    const { rest = [] } = JSON.parse(data);\n\n    const translateExpectation = (expectation) => ({\n        \"SHALL\": window.gemIGApiDocLabels.Expectation_SHALL,\n        \"SHALL-NOT\": window.gemIGApiDocLabels.Expectation_SHOULD,\n        \"SHOULD\": window.gemIGApiDocLabels.Expectation_SHOULD,\n        \"SHOULD-NOT\": window.gemIGApiDocLabels.Expectation_SHOULD_NOT,\n        \"MAY\": window.gemIGApiDocLabels.Expectation_MAY\n    }[expectation] || expectation);\n\n    for (const restEntry of rest) {\n        const { resource = [] } = restEntry;\n        const resourceDetails = resource.find(res => res.type === resourceType);\n\n        if (resourceDetails) {\n            return {\n                searchParams: resourceDetails.searchParam?.map(({ name, definition, type, documentation = 'No description', extension }) => ({\n                    name,\n                    definition,\n                    type,\n                    documentation,\n                    expectation: translateExpectation(\n                        extension?.find(ext => ext.url === \"http://hl7.org/fhir/StructureDefinition/capabilitystatement-expectation\")?.valueCode\n                    )\n                })),\n                searchInclude: resourceDetails.searchInclude,\n                searchRevInclude: resourceDetails.searchRevInclude\n            };\n        }\n    }\n\n    console.error(`${resourceType} not found in any rest entry!`);\n    return {};\n}\n\n\nexport default {\n    parseFhirCapabilityStatement\n};","\nconst loadData = async (url) => {\n    try {\n        const response = await fetch(url);\n        if (!response.ok) throw new Error(`Response status: ${response.status}`);\n        return await response.text();\n    } catch (error) {\n        console.error(error.message);\n        return \"\";\n    }\n};\n\n\nconst createElement = (tag, { classes = [], attributes = {}, innerHTML = '', children = [] } = {}) => {\n    const element = Object.assign(document.createElement(tag), { innerHTML });\n    classes.forEach(cls => element.classList.add(cls));\n    Object.entries(attributes).forEach(([key, value]) => element.setAttribute(key, value));\n    children.forEach(child => element.appendChild(child));\n    return element;\n};\n\n\nconst createTable = (headers, rows, includeHeader = true, classes = []) => {\n    const table = createElement('table', { attributes: { style: 'width: 100%' }, classes: classes });\n    if (includeHeader) {\n        const thead = createElement('thead');\n        thead.appendChild(createElement('tr', {\n            children: headers.map(headerText => createElement('th', { innerHTML: headerText }))\n        }));\n        table.appendChild(thead);\n    }\n    const tbody = createElement('tbody');\n    rows.forEach(rowData => {\n        tbody.appendChild(createElement('tr', {\n            children: rowData.map(cellData => createElement('td', { innerHTML: cellData }))\n        }));\n    });\n    table.appendChild(tbody);\n    return table;\n};\n\n\n\nexport default {\n    loadData,\n    createElement,\n    createTable\n};","import fhir from './fhir.js';\nimport utils from './utils.js';\n// import openapi from './openapi.js';\n\n// Global variables for labels\nwindow.gemIGLabels = window.gemIGLabels || {\n    GEM_Download_Button_Image: \"Bild herunterladen\",\n    GEM_Download_Button_SVG: \"SVG herunterladen\",\n    GEM_FHIR_Expectation_SHALL: \"MUSS\",\n    GEM_FHIR_Expectation_SHALL_NOT: \"DARF NICHT\",\n    GEM_FHIR_Expectation_SHOULD: \"SOLL\",\n    GEM_FHIR_Expectation_SHOULD_NOT: \"SOLL NICHT\",\n    GEM_FHIR_Expectation_MAY: \"KANN\",\n    GEM_FHIR_Parameter_Label: \"Parameter\",\n    GEM_FHIR_Type_Label: \"Type\",\n    GEM_FHIR_Expectation_Label: \"Service Anforderung\",\n    GEM_FHIR_Documentation_Label: \"Beschreibung\"\n};\n\nwindow.igtools = window.igtools || {};\n\n\n// Function to resize all SVGs to match the width of their parent container while maintaining aspect ratio\nfunction resizeSVGs() {\n    document.querySelectorAll('.gem-ig-svg-container svg').forEach(svg => {\n        try {\n            const parent = svg.parentElement;\n            const parentWidth = parent.clientWidth;\n\n            if (parentWidth > 0) {\n                svg.style.width = parentWidth + 'px';\n                const aspectRatio = svg.viewBox.baseVal.width / svg.viewBox.baseVal.height;\n                svg.style.height = (parentWidth / aspectRatio) + 'px';\n            }\n        } catch (error) {\n            console.error('Error adjusting SVG size:', error);\n        }\n    });\n}\n\n// Function to create a download link for each SVG, allowing users to download them as files\nfunction downloadSVG() {\n    const serializer = new XMLSerializer();\n\n    function createDownloadButton(svgContent, container, fileName) {\n        const svgWithProlog = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n' + svgContent;\n        const blob = new Blob([svgWithProlog], { type: 'image/svg+xml' });\n        const downloadLink = document.createElement('a');\n        downloadLink.href = URL.createObjectURL(blob);\n        downloadLink.download = fileName;\n        downloadLink.classList.add('gem-ig-download-btn');\n        downloadLink.innerText = window.gemIGLabels?.GEM_Download_Button_SVG || 'Download SVG';\n\n        const downloadLinkWrapper = document.createElement('div');\n        downloadLinkWrapper.classList.add('gem-ig-svg-downloadlink-wrapper');\n        downloadLinkWrapper.appendChild(downloadLink);\n        container.append(downloadLinkWrapper);\n    }\n\n    document.querySelectorAll('.gem-ig-svg-container svg').forEach(svg => {\n        try {\n            const svgString = serializer.serializeToString(svg);\n            createDownloadButton(svgString, svg.parentElement, 'downloaded.svg');\n        } catch (error) {\n            console.error('Error processing embedded SVG:', error);\n        }\n    });\n\n    document.querySelectorAll('.gem-ig-svg-container img[src$=\".svg\"]').forEach(img => {\n        try {\n            const imgUrl = img.src;\n            fetch(imgUrl)\n                .then(response => {\n                    if (!response.ok) {\n                        throw new Error(`Failed to fetch SVG: ${response.statusText}`);\n                    }\n                    return response.text();\n                })\n                .then(svgContent => {\n                    createDownloadButton(svgContent, img.parentElement, 'downloaded.svg');\n                })\n                .catch(error => {\n                    console.error('Error fetching SVG from <img>:', error);\n                });\n        } catch (error) {\n            console.error('Error processing <img> tag:', error);\n        }\n    });\n}\n\n// Function to create a download link for each image, allowing users to download them as PNG files\nfunction downloadImages() {\n    document.querySelectorAll('.gem-ig-img-container img').forEach(img => {\n        try {\n            const imgClone = new Image();\n            imgClone.src = img.src;\n            imgClone.onload = () => {\n                try {\n                    const canvas = document.createElement('canvas');\n                    canvas.width = imgClone.naturalWidth;\n                    canvas.height = imgClone.naturalHeight;\n                    const context = canvas.getContext('2d');\n                    context.drawImage(imgClone, 0, 0, imgClone.naturalWidth, imgClone.naturalHeight);\n                    canvas.toBlob(blob => {\n                        try {\n                            const downloadLink = document.createElement('a');\n                            downloadLink.href = URL.createObjectURL(blob);\n                            downloadLink.download = imgClone.src.split('/').pop();\n                            downloadLink.classList.add('gem-ig-download-btn');\n                            downloadLink.innerText = window.gemIGLabels.GEM_Download_Button_Image;\n\n                            const downloadLinkWrapper = document.createElement('div');\n                            downloadLinkWrapper.classList.add('gem-ig-img-downloadlink-wrapper');\n                            downloadLinkWrapper.appendChild(downloadLink);\n                            img.parentElement.append(downloadLinkWrapper);\n                        } catch (error) {\n                            console.error('Error creating download link for image:', error);\n                        }\n                    }, 'image/png');\n                } catch (error) {\n                    console.error('Error drawing image on canvas:', error);\n                }\n            };\n        } catch (error) {\n            console.error('Error loading image:', error);\n        }\n    });\n}\n\nfunction enableExamples() {\n    document.querySelectorAll('.gem-ig-example').forEach(exampleElement => {\n        const wrapper = document.createElement('div');\n        wrapper.classList.add('gem-ig-example-wrapper');\n\n        const header = document.createElement('div');\n        header.classList.add('gem-ig-example-header');\n        wrapper.appendChild(header);\n\n        const title = document.createElement('span');\n        title.textContent = exampleElement.getAttribute('data-title') || '';\n        title.classList.add('gem-ig-example-title');\n\n        const toggleButton = document.createElement('button');\n        toggleButton.classList.add('gem-ig-example-toggle');\n        \n        header.appendChild(toggleButton);\n        header.appendChild(title);\n\n        const contentWrapper = document.createElement('div');\n        contentWrapper.classList.add('gem-ig-example-content');\n        contentWrapper.innerHTML = exampleElement.innerHTML;\n        contentWrapper.style.display = 'none';\n        wrapper.appendChild(contentWrapper);\n\n        toggleButton.textContent = '▼';\n        // Add button click\n        const toggleContent = ()  => {\n            if (contentWrapper.style.display === 'none') {\n                contentWrapper.style.display = 'block';\n                toggleButton.textContent = '►';\n            } else {\n                contentWrapper.style.display = 'none';\n                toggleButton.textContent = '▼';\n            }\n        }\n        toggleButton.addEventListener('click', toggleContent);\n        title.addEventListener('click', toggleContent);\n\n        exampleElement.parentNode.insertBefore(wrapper, exampleElement);\n        exampleElement.remove(); // Remove original\n    });\n}\n\n\nfunction renderCapabilityStatementData(data, resourceType, what, parent) {\n    const fhirData = fhir.parseFhirCapabilityStatement(data, resourceType);\n    if(what == 'search') {\n        if (fhirData.searchParams?.length) {\n            const searchParametersRows = fhirData.searchParams.map(({ name, definition, type, documentation, expectation }) => [\n                // definition ? `<a href=\"${definition}\" target=\"_blank\">${name}</a>` : name,\n                name,\n                `<code>${type}</code>`,\n                documentation,\n                expectation\n            ]);\n            parent.appendChild(utils.createElement('div', { children: [utils.createTable([\n                window.gemIGLabels.GEM_FHIR_Parameter_Label,\n                window.gemIGLabels.GEM_FHIR_Type_Label,\n                window.gemIGLabels.GEM_FHIR_Documentation_Label,\n                window.gemIGLabels.GEM_FHIR_Expectation_Label\n            ], searchParametersRows, true)] }));\n        }\n    }\n    else if(what == 'include') {\n        if (fhirData.searchInclude || fhirData.searchRevInclude) {\n            const rows = Array.from({ length: Math.max(fhirData.searchInclude?.length || 0, fhirData.searchRevInclude?.length || 0) }, (_, i) => [\n                fhirData.searchInclude?.[i] || '',\n                fhirData.searchRevInclude?.[i] || ''\n            ]);\n            parent.appendChild(utils.createElement('div', { classes: [], children: [utils.createTable(['Include', 'RevInclude'], rows)] }));\n        }\n    }\n}\n\n\nfunction fhirData() {\n    const capDivs = document.querySelectorAll('div[data-fhir-capabilitystatement-url]');\n    capDivs.forEach(div => {\n        const capUrl = div.getAttribute('data-fhir-capabilitystatement-url');\n        const resourceType = div.getAttribute('data-fhir-resource-type');\n        const what = div.getAttribute('data-fhir-capabilitystatement-render');\n        if(capUrl && resourceType) {\n            utils.loadData(capUrl).then(data => renderCapabilityStatementData(data, resourceType, what, div));\n        }\n    });\n}\n\n\nfunction renderCodeBlocks() {\n    document.querySelectorAll('code').forEach(codeElement => {\n        // Überprüfen, ob das übergeordnete Element ein <pre>-Tag ist\n        const parentElement = codeElement.parentElement;\n        if (parentElement && parentElement.tagName.toLowerCase() === 'pre') {\n            const classes = Array.from(codeElement.classList);\n            const languageClass = classes.find((cls) => cls.includes(\"language-\"));\n            \n            if (languageClass && !languageClass.includes('plaintext')) {\n                const button = createCopyButton(codeElement.textContent);\n                parentElement.insertBefore(button, codeElement);\n            }\n        }\n    });\n}\n\n\nfunction convertBibliographyToLink(literatureData) {\n\n    function replaceMatches(node) {\n        if (node.nodeType === Node.TEXT_NODE) {\n            let text = node.nodeValue;\n            let parent = node.parentNode;\n            let changed = false;\n            let newHTML = text;\n\n            literatureData.forEach(entry => {\n                let regex = new RegExp(`\\\\[${entry.key}\\\\]`, \"g\");\n                if (regex.test(text)) {\n                    changed = true;\n                    newHTML = newHTML.replace(regex, `<a href=\"${entry.link}\" class=\"literature-link\" title=\"${entry.author}: ${entry.title}\" data-author=\"${entry.author}\" data-title=\"${entry.title}\" target=\"_blank\">[${entry.key}]</a>`);\n                }\n            });\n            if (changed) {\n                let tempSpan = document.createElement(\"span\");\n                tempSpan.innerHTML = newHTML;\n                parent.replaceChild(tempSpan, node);\n            }\n\n        } else {\n            Array.from(node.childNodes).forEach(replaceMatches);\n        }\n    }\n\n    replaceMatches(document.body);\n\n}\n// Make public\nigtools.convertBibliographyToLink = convertBibliographyToLink;\n\n// Set up event listeners to initialize functions when the page has fully loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n    try {\n        resizeSVGs();\n        downloadSVG();\n        downloadImages();\n        enableExamples();\n        renderCodeBlocks();\n        fhirData();\n        // openapi.renderOpenApi();\n    } catch (error) {\n        console.error('Error initializing functions:', error);\n    }\n});\n\n// Set up event listener to resize SVGs when the browser window is resized\nwindow.addEventListener('resize', () => {\n    try {\n        resizeSVGs();\n    } catch (error) {\n        console.error('Error adjusting SVG size on window resize:', error);\n    }\n});\n"],"names":["root","factory","exports","module","define","amd","self","parseFhirCapabilityStatement","data","resourceType","_step","_JSON$parse$rest","JSON","parse","rest","_iterator","_createForOfIteratorHelper","s","n","done","_resourceDetails$sear","_restEntry$resource","value","resource","resourceDetails","find","res","type","searchParams","searchParam","map","_ref","_extension$find","expectation","name","definition","_ref$documentation","documentation","extension","ext","url","valueCode","window","gemIGApiDocLabels","Expectation_SHALL","Expectation_SHOULD","Expectation_SHOULD_NOT","Expectation_MAY","searchInclude","searchRevInclude","err","e","f","console","error","concat","_regeneratorRuntime","t","r","Object","prototype","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","createElement","tag","_ref2","arguments","undefined","_ref2$classes","classes","_ref2$attributes","attributes","_ref2$innerHTML","innerHTML","_ref2$children","children","element","assign","document","cls","classList","add","entries","_ref3","_ref4","_slicedToArray","key","setAttribute","child","appendChild","loadData","_callee","response","_context","fetch","ok","status","text","t0","message","apply","_next","_throw","_x","createTable","headers","rows","includeHeader","table","style","thead","headerText","tbody","rowData","cellData","resizeSVGs","querySelectorAll","svg","parentWidth","parentElement","clientWidth","width","aspectRatio","viewBox","baseVal","height","fhirData","div","capUrl","getAttribute","what","utils","parent","_fhirData$searchParam","fhir","searchParametersRows","gemIGLabels","GEM_FHIR_Parameter_Label","GEM_FHIR_Type_Label","GEM_FHIR_Documentation_Label","GEM_FHIR_Expectation_Label","_fhirData$searchInclu","_fhirData$searchRevIn","Array","from","Math","max","_","_fhirData$searchInclu2","_fhirData$searchRevIn2","renderCapabilityStatementData","GEM_Download_Button_Image","GEM_Download_Button_SVG","GEM_FHIR_Expectation_SHALL","GEM_FHIR_Expectation_SHALL_NOT","GEM_FHIR_Expectation_SHOULD","GEM_FHIR_Expectation_SHOULD_NOT","GEM_FHIR_Expectation_MAY","igtools","convertBibliographyToLink","literatureData","replaceMatches","node","nodeType","Node","TEXT_NODE","nodeValue","parentNode","changed","newHTML","entry","regex","RegExp","test","replace","link","author","title","tempSpan","replaceChild","childNodes","body","addEventListener","serializer","XMLSerializer","createDownloadButton","svgContent","container","fileName","_window$gemIGLabels","blob","Blob","downloadLink","href","URL","createObjectURL","download","innerText","downloadLinkWrapper","append","serializeToString","img","imgUrl","src","statusText","downloadSVG","imgClone","Image","onload","canvas","naturalWidth","naturalHeight","getContext","drawImage","toBlob","split","exampleElement","wrapper","header","textContent","toggleButton","contentWrapper","display","toggleContent","insertBefore","remove","codeElement","tagName","toLowerCase","languageClass","includes","button","createCopyButton"],"sourceRoot":""}