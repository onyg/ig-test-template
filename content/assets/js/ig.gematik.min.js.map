{"version":3,"file":"ig.gematik.min.js","mappings":"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","sources":["webpack://FHIRIGDOC/webpack/universalModuleDefinition","webpack://FHIRIGDOC/./src/fhir.js","webpack://FHIRIGDOC/./src/utils.js","webpack://FHIRIGDOC/./src/main.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"FHIRIGDOC\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FHIRIGDOC\"] = factory();\n\telse\n\t\troot[\"FHIRIGDOC\"] = factory();\n})(self, () => {\nreturn ","\nfunction parseFhirCapabilityStatement(data, resourceType) {\n    const { rest: [{ resource = [] } = {}] = [] } = JSON.parse(data);\n    const resourceDetails = resource.find(res => res.type === resourceType);\n    if (!resourceDetails) {\n        console.error(`${resourceType} not found!`);\n        return {};\n    }\n    const translateExpectation = (expectation) => ({\n        \"SHALL\": window.gemIGApiDocLabels.Expectation_SHALL,\n        'SHOULD': window.gemIGApiDocLabels.Expectation_SHOULD,\n        'SHOULD-NOT': window.gemIGApiDocLabels.Expectation_SHOULD_NOT,\n        'MAY': window.gemIGApiDocLabels.Expectation_MAY\n    }[expectation] || expectation);\n\n    return {\n        searchParams: resourceDetails.searchParam?.map(({ name, definition, type, documentation = 'No description', extension }) => ({\n            name,\n            definition,\n            type,\n            documentation,\n            expectation: translateExpectation(extension?.find(ext => ext.url === \"http://hl7.org/fhir/StructureDefinition/capabilitystatement-expectation\")?.valueCode)\n        })),\n        searchInclude: resourceDetails.searchInclude,\n        searchRevInclude: resourceDetails.searchRevInclude\n    };\n}\n\n\nexport default {\n    parseFhirCapabilityStatement\n};","\nconst loadData = async (url) => {\n    try {\n        const response = await fetch(url);\n        if (!response.ok) throw new Error(`Response status: ${response.status}`);\n        return await response.text();\n    } catch (error) {\n        console.error(error.message);\n        return \"\";\n    }\n};\n\n\nconst createElement = (tag, { classes = [], attributes = {}, innerHTML = '', children = [] } = {}) => {\n    const element = Object.assign(document.createElement(tag), { innerHTML });\n    classes.forEach(cls => element.classList.add(cls));\n    Object.entries(attributes).forEach(([key, value]) => element.setAttribute(key, value));\n    children.forEach(child => element.appendChild(child));\n    return element;\n};\n\n\nconst createTable = (headers, rows, includeHeader = true, classes = []) => {\n    const table = createElement('table', { attributes: { style: 'width: 100%' }, classes: classes });\n    if (includeHeader) {\n        const thead = createElement('thead');\n        thead.appendChild(createElement('tr', {\n            children: headers.map(headerText => createElement('th', { innerHTML: headerText }))\n        }));\n        table.appendChild(thead);\n    }\n    const tbody = createElement('tbody');\n    rows.forEach(rowData => {\n        tbody.appendChild(createElement('tr', {\n            children: rowData.map(cellData => createElement('td', { innerHTML: cellData }))\n        }));\n    });\n    table.appendChild(tbody);\n    return table;\n};\n\n\n\nexport default {\n    loadData,\n    createElement,\n    createTable\n};","import fhir from './fhir.js';\nimport utils from './utils.js';\n\n// Global variables for labels\nwindow.gemIGLabels = window.gemIGLabels || {\n    GEM_Download_Button_Image: \"Bild herunterladen\",\n    GEM_Download_Button_SVG: \"SVG herunterladen\",\n    GEM_FHIR_Expectation_SHALL: \"MUSS\",\n    GEM_FHIR_Expectation_SHOULD: \"SOLL\",\n    GEM_FHIR_Expectation_SHOULD_NOT: \"DARF NICHT\",\n    GEM_FHIR_Expectation_MAY: \"KANN\",\n    GEM_FHIR_Parameter_Label: \"Parameter\",\n    GEM_FHIR_Type_Label: \"Type\",\n    GEM_FHIR_Expectation_Label: \"Service Anforderung\",\n    GEM_FHIR_Documentation_Label: \"Beschreibung\"\n};\n\nwindow.igtools = window.igtools || {};\n\n\n// Function to resize all SVGs to match the width of their parent container while maintaining aspect ratio\nfunction resizeSVGs() {\n    document.querySelectorAll('.gem-ig-svg-container svg').forEach(svg => {\n        try {\n            const parent = svg.parentElement;\n            const parentWidth = parent.clientWidth;\n\n            if (parentWidth > 0) {\n                svg.style.width = parentWidth + 'px';\n                const aspectRatio = svg.viewBox.baseVal.width / svg.viewBox.baseVal.height;\n                svg.style.height = (parentWidth / aspectRatio) + 'px';\n            }\n        } catch (error) {\n            console.error('Error adjusting SVG size:', error);\n        }\n    });\n}\n\n// Function to create a download link for each SVG, allowing users to download them as files\nfunction downloadSVG() {\n    const serializer = new XMLSerializer();\n\n    function createDownloadButton(svgContent, container, fileName) {\n        const svgWithProlog = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n' + svgContent;\n        const blob = new Blob([svgWithProlog], { type: 'image/svg+xml' });\n        const downloadLink = document.createElement('a');\n        downloadLink.href = URL.createObjectURL(blob);\n        downloadLink.download = fileName;\n        downloadLink.classList.add('gem-ig-download-btn');\n        downloadLink.innerText = window.gemIGLabels?.GEM_Download_Button_SVG || 'Download SVG';\n\n        const downloadLinkWrapper = document.createElement('div');\n        downloadLinkWrapper.classList.add('gem-ig-svg-downloadlink-wrapper');\n        downloadLinkWrapper.appendChild(downloadLink);\n        container.append(downloadLinkWrapper);\n    }\n\n    document.querySelectorAll('.gem-ig-svg-container svg').forEach(svg => {\n        try {\n            const svgString = serializer.serializeToString(svg);\n            createDownloadButton(svgString, svg.parentElement, 'downloaded.svg');\n        } catch (error) {\n            console.error('Error processing embedded SVG:', error);\n        }\n    });\n\n    document.querySelectorAll('.gem-ig-svg-container img[src$=\".svg\"]').forEach(img => {\n        try {\n            const imgUrl = img.src;\n            fetch(imgUrl)\n                .then(response => {\n                    if (!response.ok) {\n                        throw new Error(`Failed to fetch SVG: ${response.statusText}`);\n                    }\n                    return response.text();\n                })\n                .then(svgContent => {\n                    createDownloadButton(svgContent, img.parentElement, 'downloaded.svg');\n                })\n                .catch(error => {\n                    console.error('Error fetching SVG from <img>:', error);\n                });\n        } catch (error) {\n            console.error('Error processing <img> tag:', error);\n        }\n    });\n}\n\n// Function to create a download link for each image, allowing users to download them as PNG files\nfunction downloadImages() {\n    document.querySelectorAll('.gem-ig-img-container img').forEach(img => {\n        try {\n            const imgClone = new Image();\n            imgClone.src = img.src;\n            imgClone.onload = () => {\n                try {\n                    const canvas = document.createElement('canvas');\n                    canvas.width = imgClone.naturalWidth;\n                    canvas.height = imgClone.naturalHeight;\n                    const context = canvas.getContext('2d');\n                    context.drawImage(imgClone, 0, 0, imgClone.naturalWidth, imgClone.naturalHeight);\n                    canvas.toBlob(blob => {\n                        try {\n                            const downloadLink = document.createElement('a');\n                            downloadLink.href = URL.createObjectURL(blob);\n                            downloadLink.download = imgClone.src.split('/').pop();\n                            downloadLink.classList.add('gem-ig-download-btn');\n                            downloadLink.innerText = window.gemIGLabels.GEM_Download_Button_Image;\n\n                            const downloadLinkWrapper = document.createElement('div');\n                            downloadLinkWrapper.classList.add('gem-ig-img-downloadlink-wrapper');\n                            downloadLinkWrapper.appendChild(downloadLink);\n                            img.parentElement.append(downloadLinkWrapper);\n                        } catch (error) {\n                            console.error('Error creating download link for image:', error);\n                        }\n                    }, 'image/png');\n                } catch (error) {\n                    console.error('Error drawing image on canvas:', error);\n                }\n            };\n        } catch (error) {\n            console.error('Error loading image:', error);\n        }\n    });\n}\n\nfunction enableExamples() {\n    document.querySelectorAll('.gem-ig-example').forEach(exampleElement => {\n        const wrapper = document.createElement('div');\n        wrapper.classList.add('gem-ig-example-wrapper');\n\n        const header = document.createElement('div');\n        header.classList.add('gem-ig-example-header');\n        wrapper.appendChild(header);\n\n        const title = document.createElement('span');\n        title.textContent = exampleElement.getAttribute('data-title') || '';\n        title.classList.add('gem-ig-example-title');\n\n        const toggleButton = document.createElement('button');\n        toggleButton.classList.add('gem-ig-example-toggle');\n        \n        header.appendChild(toggleButton);\n        header.appendChild(title);\n\n        const contentWrapper = document.createElement('div');\n        contentWrapper.classList.add('gem-ig-example-content');\n        contentWrapper.innerHTML = exampleElement.innerHTML;\n        contentWrapper.style.display = 'none';\n        wrapper.appendChild(contentWrapper);\n\n        toggleButton.textContent = '▼';\n        // Add button click\n        const toggleContent = ()  => {\n            if (contentWrapper.style.display === 'none') {\n                contentWrapper.style.display = 'block';\n                toggleButton.textContent = '►';\n            } else {\n                contentWrapper.style.display = 'none';\n                toggleButton.textContent = '▼';\n            }\n        }\n        toggleButton.addEventListener('click', toggleContent);\n        title.addEventListener('click', toggleContent);\n\n        exampleElement.parentNode.insertBefore(wrapper, exampleElement);\n        exampleElement.remove(); // Remove original\n    });\n}\n\n\nfunction renderCapabilityStatementData(data, resourceType, what, parent) {\n    const fhirData = fhir.parseFhirCapabilityStatement(data, resourceType);\n    if(what == 'search') {\n        if (fhirData.searchParams?.length) {\n            const searchParametersRows = fhirData.searchParams.map(({ name, definition, type, documentation, expectation }) => [\n                // definition ? `<a href=\"${definition}\" target=\"_blank\">${name}</a>` : name,\n                name,\n                `<code>${type}</code>`,\n                documentation,\n                expectation\n            ]);\n            parent.appendChild(utils.createElement('div', { children: [utils.createTable([\n                window.gemIGLabels.GEM_FHIR_Parameter_Label,\n                window.gemIGLabels.GEM_FHIR_Type_Label,\n                window.gemIGLabels.GEM_FHIR_Documentation_Label,\n                window.gemIGLabels.GEM_FHIR_Expectation_Label\n            ], searchParametersRows, true)] }));\n        }\n    }\n    else if(what == 'include') {\n        if (fhirData.searchInclude || fhirData.searchRevInclude) {\n            const rows = Array.from({ length: Math.max(fhirData.searchInclude?.length || 0, fhirData.searchRevInclude?.length || 0) }, (_, i) => [\n                fhirData.searchInclude?.[i] || '',\n                fhirData.searchRevInclude?.[i] || ''\n            ]);\n            parent.appendChild(utils.createElement('div', { classes: [], children: [utils.createTable(['Include', 'RevInclude'], rows)] }));\n        }\n    }\n}\n\n\nfunction fhirData() {\n    const capDivs = document.querySelectorAll('div[data-fhir-capabilitystatement-url]');\n    capDivs.forEach(div => {\n        const capUrl = div.getAttribute('data-fhir-capabilitystatement-url');\n        const resourceType = div.getAttribute('data-fhir-resource-type');\n        const what = div.getAttribute('data-fhir-capabilitystatement-render');\n        if(capUrl && resourceType) {\n            utils.loadData(capUrl).then(data => renderCapabilityStatementData(data, resourceType, what, div));\n        }\n    });\n}\n\n\nfunction renderCodeBlocks() {\n    document.querySelectorAll('code').forEach(codeElement => {\n        // Überprüfen, ob das übergeordnete Element ein <pre>-Tag ist\n        const parentElement = codeElement.parentElement;\n        if (parentElement && parentElement.tagName.toLowerCase() === 'pre') {\n            const classes = Array.from(codeElement.classList);\n            const languageClass = classes.find((cls) => cls.includes(\"language-\"));\n            \n            if (languageClass && !languageClass.includes('plaintext')) {\n                const button = createCopyButton(codeElement.textContent);\n                parentElement.insertBefore(button, codeElement);\n            }\n        }\n    });\n}\n\n\nfunction convertBibliographyToLink(literatureData) {\n\n    function replaceMatches(node) {\n        if (node.nodeType === Node.TEXT_NODE) {\n            let text = node.nodeValue;\n            let parent = node.parentNode;\n            let changed = false;\n            let newHTML = text;\n\n            literatureData.forEach(entry => {\n                let regex = new RegExp(`\\\\[${entry.key}\\\\]`, \"g\");\n                if (regex.test(text)) {\n                    changed = true;\n                    newHTML = newHTML.replace(regex, `<a href=\"${entry.link}\" class=\"literature-link\" title=\"${entry.author}: ${entry.title}\" data-author=\"${entry.author}\" data-title=\"${entry.title}\" target=\"_blank\">[${entry.key}]</a>`);\n                }\n            });\n            if (changed) {\n                let tempSpan = document.createElement(\"span\");\n                tempSpan.innerHTML = newHTML;\n                parent.replaceChild(tempSpan, node);\n            }\n\n        } else {\n            Array.from(node.childNodes).forEach(replaceMatches);\n        }\n    }\n\n    replaceMatches(document.body);\n\n}\n// Make public\nigtools.convertBibliographyToLink = convertBibliographyToLink;\n\n// Set up event listeners to initialize functions when the page has fully loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n    try {\n        resizeSVGs();\n        downloadSVG();\n        downloadImages();\n        enableExamples();\n        renderCodeBlocks();\n        fhirData();\n    } catch (error) {\n        console.error('Error initializing functions:', error);\n    }\n});\n\n// Set up event listener to resize SVGs when the browser window is resized\nwindow.addEventListener('resize', () => {\n    try {\n        resizeSVGs();\n    } catch (error) {\n        console.error('Error adjusting SVG size on window resize:', error);\n    }\n});\n"],"names":["root","factory","exports","module","define","amd","self","parseFhirCapabilityStatement","data","resourceType","_resourceDetails$sear","_JSON$parse$rest","JSON","parse","rest","_JSON$parse$rest3$","_slicedToArray","_JSON$parse$rest3$2$r","resource","resourceDetails","find","res","type","searchParams","searchParam","map","_ref","_extension$find","expectation","name","definition","_ref$documentation","documentation","extension","ext","url","valueCode","window","gemIGApiDocLabels","Expectation_SHALL","Expectation_SHOULD","Expectation_SHOULD_NOT","Expectation_MAY","searchInclude","searchRevInclude","console","error","concat","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","createElement","tag","_ref2","arguments","undefined","_ref2$classes","classes","_ref2$attributes","attributes","_ref2$innerHTML","innerHTML","_ref2$children","children","element","assign","document","cls","classList","add","entries","_ref3","_ref4","key","setAttribute","child","appendChild","loadData","_callee","response","_context","fetch","ok","status","text","t0","message","apply","_next","_throw","_x","createTable","headers","rows","includeHeader","table","style","thead","headerText","tbody","rowData","cellData","resizeSVGs","querySelectorAll","svg","parentWidth","parentElement","clientWidth","width","aspectRatio","viewBox","baseVal","height","fhirData","div","capUrl","getAttribute","what","utils","parent","_fhirData$searchParam","fhir","searchParametersRows","gemIGLabels","GEM_FHIR_Parameter_Label","GEM_FHIR_Type_Label","GEM_FHIR_Documentation_Label","GEM_FHIR_Expectation_Label","_fhirData$searchInclu","_fhirData$searchRevIn","Array","from","Math","max","_","_fhirData$searchInclu2","_fhirData$searchRevIn2","renderCapabilityStatementData","GEM_Download_Button_Image","GEM_Download_Button_SVG","GEM_FHIR_Expectation_SHALL","GEM_FHIR_Expectation_SHOULD","GEM_FHIR_Expectation_SHOULD_NOT","GEM_FHIR_Expectation_MAY","igtools","convertBibliographyToLink","literatureData","replaceMatches","node","nodeType","Node","TEXT_NODE","nodeValue","parentNode","changed","newHTML","entry","regex","RegExp","test","replace","link","author","title","tempSpan","replaceChild","childNodes","body","addEventListener","serializer","XMLSerializer","createDownloadButton","svgContent","container","fileName","_window$gemIGLabels","blob","Blob","downloadLink","href","URL","createObjectURL","download","innerText","downloadLinkWrapper","append","serializeToString","img","imgUrl","src","statusText","downloadSVG","imgClone","Image","onload","canvas","naturalWidth","naturalHeight","getContext","drawImage","toBlob","split","exampleElement","wrapper","header","textContent","toggleButton","contentWrapper","display","toggleContent","insertBefore","remove","codeElement","tagName","toLowerCase","languageClass","includes","button","createCopyButton"],"sourceRoot":""}